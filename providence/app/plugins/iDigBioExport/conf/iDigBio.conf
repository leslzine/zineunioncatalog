# ----------------------------------------------------------------------
# app/conf/iDigBio.conf
# ----------------------------------------------------------------------
# CollectiveAccess
# Open-source collections management software
# ----------------------------------------------------------------------
#
# Software by Whirl-i-Gig (http://www.whirl-i-gig.com)
# Copyright 2017 Whirl-i-Gig
#
# This plugin provides an automated export function to the iDigBio database
# It generates an RSS feed of linked CSV export files with supporting data
# To enable this plugin:
# 1) Update this conf file per the instructions below
# 2) Create any necessary EML files and upload them to your system
# 3) Ensure you have a working, DarwinCore-compliant, exporter uploaded to your system
# 4) Schedule a crontab task at the frequency you would like to generate a new export
#    which calls the caUtils function "process-task-queue"
# 5) Provide the RSS URL to iDigBio for harvesting


# Enable the plugin
enabled = 0

# Set the output directory for the RSS feed, CSV and EML files as an absolute path
# This must be set to a publicly available directory on the same server as this Providence installation
# This can be within a Pawtucket2 installation or a stand-alone RSS directory
# It cannot be within the Providence directory for authentication purposes 
# NOTE: Include trailing slash
rssAbsolutePath = absolute_path_to_desired_rss_directory
rssPublicPath = relative_path_to_rss_directory_from_url_root
urlRoot = server_root_url

# Set the name of the output RSS file
# Don't include the .xml file extension
rssFeedName = rss_feed_name


# RSS Feed Headers
# These are the required headers for an iDigBio compliant RSS feed
headers = {
    title = institution_title,
    description = description_of_rss_feed,
    language = feed_language_(generally en-us)
}

# Collection export details
# iDigBio can except multiple collections per institution
# Separate collections must be created for occurrences(specimens) and multimedia
# Each collection contains the following parts
# 1) type: This must be set to 'occurrence' or 'multimedia' depending on the content of the export
# 2) rss_fields: These fields are added verbatim to the generated RSS file
# 3) eml_file: This file contains additional information about the collection. This can be put anywhere,
#    however it is recommended that it be kept in the eml directory fo the iDigBioExport plugin
# 4) filterQuery: This is the query for records to be exported. It should be formatted as a standard Collective
#    Access query in CA_TABLE.ATTRIBUTE:TERM format. See https://docs.collectiveaccess.org/wiki/Search_Syntax
#    for more information
# 5) exporter and export_directory: This is the exporter file and its location to use for the export
collections = {
    collection_code/title = {
	type = occurrence_or_multimedia,
        rss_fields = {
            title = collection_title,
            collectionCode = collection_code,
            description = collection_description,
            id = collection_uuid,
            type = CSV,
            recordtype = occurrence_or_multimedia,
        },
        eml_file = absolute_path_to_eml_file,
        filterQuery = filter_query_string,
        exporter = exporter_file_name,
        exporter_directory = absolute_path_to_exporter_directory
    },
}
